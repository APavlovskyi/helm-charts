apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ecr-secret-operator.fullname" . }}
  labels:
    {{- include "ecr-secret-operator.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      control-plane: controller-manager
  strategy: {}

  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}    
      containers:
      - name: kube-rbac-proxy
        image: "{{ .Values.images.kube_rbac_proxy.repository }}:{{ .Values.images.kube_rbac_proxy.tag }}"
        args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
      - name: manager
        image: "{{ .Values.images.manager.repository }}:{{ .Values.images.manager.tag }}"
        args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        env:
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              key: aws_access_key_id
              name: aws-ecr-cloud-credentials
              optional: true
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: aws_secret_access_key
              name: aws-ecr-cloud-credentials
              optional: true
        - name: AWS_SDK_LOAD_CONFIG
          value: "1"
        - name: AWS_CONFIG_FILE
          value: /var/run/secrets/aws/credentials
        - name: WATCH_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['olm.targetNamespaces']
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 1000Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/aws
          name: aws-credentials
          readOnly: true
        - mountPath: /var/run/secrets/openshift/serviceaccount
          name: bound-sa-token
          readOnly: true
      securityContext:
        runAsNonRoot: true
      serviceAccountName: {{ include "ecr-secret-operator.serviceAccountName" . }}        
      terminationGracePeriodSeconds: 10
      volumes:
      - name: aws-credentials
        secret:
          optional: true
          secretName: aws-ecr-cloud-credentials
      - name: bound-sa-token
        projected:
          sources:
          - serviceAccountToken:
              audience: openshift
              path: token

